---
layout: post
title:  "字符集和字符编码（一）"
date:   2015-05-23 00:00:00
categories: article
tags: character character-set encoding
---

我在尝试写一系列文章，介绍字符集和字符编码的那些事。

本文只讨论计算机系统中的字符集和字符编码。

# 第一篇  概念

在计算机系统中，为了处理文字信息，需要一种方式对文字进行存储和表示。我们知道计算机内以二进制（0和1）的形式存储信息，不同的二进制比特序列，究竟代表指令还是数据、以及代表什么内容的数据，取决于设计者赋予它们的含义，计算机按照固定的模式或协议来处理二进制数据。计算机处理二进制数据的单元是字节（Byte），1个字节由8个比特（Bit）组成。

对于自然语言而言，字符（Character）是用来表意的符号，字符的组合形成文字。世界上各种语言的文字，包含了非常之多的字符。举例来说，拉丁字母、汉字、日文假名、标点符号、阿拉伯数字等等都是字符。

字符集（Character Set），字面意义上就是字符的集合。由于计算机处理文字的需要，在计算机技术发展的不同时期和地区，计算机工作者定义了许多种不同的字符集合。一个字符集合的定义，包括它含有哪些字符；以及每一个字符，在计算机中用什么样的字节序列来存储和表示，也就是对字符进行了编码。有了这样精确的定义，计算机才能正常识别和处理字符，计算机是很傻的，不能处理模糊的不精确的东西。

所谓编码，是信息从一种形式或格式转换为另一种形式或格式的过程，解码是编码的逆过程。编码简单理解就是集合A到集合B的映射。字符编码，先定义集合A，也就是有哪些字符可用，也就是所谓的字符集；集合B就是字节序列的集合；映射的规则就是编码的规则。

因此从计算机技术的角度来说，字符集和字符编码（Character Encoding）是同一概念，是同义词。也可以这样理解，因为我们有处理文字信息的需要，所以我们首先要对字符进行字节编码，让计算机能够存储和识别字符；那我们怎样进行编码呢，当然先得定义有哪些字符需要编码，也就是定义字符集。所以字符集和字符编码这两个概念是相伴相生的。维基百科上Character Set的页面重定向到了Character Encoding页面。

# 第二篇 规则

计算机技术中有哪些字符集呢？例如ASCII、Latin1、GB2312、GBK、GB18030、BIG5、Unicode等等。

下面我们来详细解读常见字符集的编码规则。大家可以注意到，字符编码不仅仅是简单的将字符转换到字节序列的过程。以统一码（Unicode）和通用字符集（UCS）所构成的现代字符编码模型要更为复杂。

## ASCII编码

ASCII代表American Standard Code for Information Interchange。它还有个名字叫ISO/IEC 646。

ASCII编码是基于英文字母表的编码，主要用于显示现代英文。ASCII最初实际是为电传打印机而设计的，因此有些字符的含义可能比较难以理解，多数非打印字符已经废弃，几乎不用于他们最初的设计目的。

ASCII将128个字符编码成7-bit整数，包括33个非打印字符（也叫做控制字符）和95个可打印字符，空格属于可打印字符。实际存储时使用1个字节的低7位存储，最高位用作奇偶校验位。ASCII编码的字符包括以下几类：

- 数字字符0-9
- 小写字母a-z，大写字母A-Z
- 基本的英文标点
- 控制字符
- 空格

直到2007年12月，ASCII都是Web上最通用的字符编码，从那时起UTF-8超过了ASCII，UTF-8是ASCII的超集。

(未完待续...)

<br><br>参考文档： 

<http://en.wikipedia.org/wiki/Character_encoding>

<http://zh.wikipedia.org/w/index.php?title=字符编码&redirect=no>

<http://www.asciitable.com/>

<http://en.wikipedia.org/wiki/ASCII>

